%h1= t(".users_index")
%h2= t(".total_users", number: User.all.length)

%h3
  = link_to new_admin_user_path, class: "btn btn-default" do
    %span.glyphicon.glyphicon-plus
    =t(".add_user")
%br

= will_paginate @users, :param_name => 'users_page',
  :previous_label => t("will_paginate.previous_label"),
  :next_label     => t("will_paginate.next_label")
%table.table.table-striped.table-bordered.table-hover
  %tr
    %th= t(".full_name")
    %th= t(".email")
    %th= t(".role")
    %th= t(".state")
    %th= t(".activate")
    %th= t(".inactivate")
    %th= t(".delete")
    %th= t(".edit")
    -if current_user.is_admin?
      %th Manage Roles
    - @users.each do |user|
      %tr
        %td= link_to user.full_name, admin_user_path(user.id)
        %td= user.email
        %td
          %ul
          - user.user_roles.each do |user_role|
            %li= user_role.role_name
        %td{:class => "#{user.state}"}
          = user.state
        %td
          - if !user.is_active?
            = link_to activate_admin_user_path(user.id), method: :put, class: "btn btn-success", "data-no-turbolink" => true do
              %span.glyphicon.glyphicon-ok
        %td
          - if !user.is_inactive?
            = link_to inactivate_admin_user_path(user.id), method: :put, class: "btn btn-danger", "data-no-turbolink" => true do
              %span.glyphicon.glyphicon-remove
        %td
          = link_to admin_user_path(user.id), method: :delete, data: {confirm: 'Are you sure to delete?'}, class: "btn btn-default" do
            %span.glyphicon.glyphicon-trash
        %td
          = link_to edit_admin_user_path(user.id), class: "btn btn-default" do
            %span.glyphicon.glyphicon-edit
            Edit

        -if current_user.is_admin?
          %td
            = link_to admin_user_user_roles_path(user.id), class: "btn btn-default" do
              %span.glyphicon.glyphicon-wrench
              Roles
= will_paginate @users, :param_name => 'users_page',
  :previous_label => t("will_paginate.previous_label"),
  :next_label     => t("will_paginate.next_label")